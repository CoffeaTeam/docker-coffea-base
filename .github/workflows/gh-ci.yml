name: Docker build

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

env:
  DOCKER_ORG: coffeateam
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  release: "0.7.22"

jobs:

  matrix-build:
    strategy:
      fail-fast: false
      matrix:
        image_dir: [base, base-cc7, base-almalinux8]
        python: ["3.8", "3.9", "3.10", "3.11"]
    name: ${{ matrix.image_dir }}-${{ matrix.python }}
    runs-on: ubuntu-latest
    steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        driver: docker

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: github.event_name == 'push'
      with:
        username: ${{ secrets.DOCKERHUB_ACCOUNT }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    #- name: Login to GitHub Container Registry
    #  uses: docker/login-action@v1
    #  if: github.event_name == 'push'
    #  with:
    #    registry: ghcr.io
    #    username: ${{ github.actor }}
    #    password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate tags
      id: tags
      env:
        image: ${{ matrix.image_dir }}
        python: ${{ matrix.python }}
      run: |
        image="coffeateam/coffea-${image}"
        tag="${image}:${release}-py${python}"
        tags=${image}:latest-py${python},$tag

        echo "::set-output name=tags::${tags}"
        echo "::set-output name=tag::${tag}"


    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ${{ matrix.image.image_dir }}
        push: ${{  github.event_name == 'push' }}
        platforms: linux/amd64
        tags: ${{ steps.tags.outputs.tags }}
        build-args: |
          python=${{ matrix.python }}

    - name: Make sure voms tools are working
      run: |
        ERROR=$(docker run ${DOCKER_ORG}/${IMAGE}:PR voms-proxy-info 2>&1 > /dev/null; exit 0)
        TEST=$(echo -e "\nCouldn't find a valid proxy.\n")

        if [ "$ERROR" == "$TEST" ]; then
          exit 0
        else
          exit 1
        fi

    - name: Export Full Conda Environment
      run: |
        docker run ${DOCKER_ORG}/${IMAGE}:PR conda list --export
