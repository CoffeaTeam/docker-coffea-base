name: Docker build

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

env:
  DOCKER_ORG: coffeateam
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  release: "2024.3.0"

jobs:

  matrix-build:
    strategy:
      fail-fast: false
      matrix:
        image_dir: [base, base-cc7, base-almalinux8]
        python: ["3.8", "3.9", "3.10"]
        exclude:
          - image_dir: base-cc7
            python: 3.8
          - image_dir: base-almalinux8
            python: 3.8
          - image_dir: base-cc7
            python: 3.9
          - image_dir: base-almalinux8
            python: 3.9
    name: ${{ matrix.image_dir }}-${{ matrix.python }}
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: github.event_name == 'push'
      with:
        username: ${{ secrets.DOCKERHUB_ACCOUNT }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    #- name: Login to GitHub Container Registry
    #  uses: docker/login-action@v1
    #  if: github.event_name == 'push'
    #  with:
    #    registry: ghcr.io
    #    username: ${{ github.actor }}
    #    password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate tags
      id: tags
      env:
        image_dir: ${{ matrix.image_dir }}
        python: ${{ matrix.python }}
      run: |
        image="coffeateam/coffea-${image_dir}"

        tag="${image}:${release}-py${python}"
        tags=${image}:latest-py${python},$tag

        echo "::set-output name=tag::${tag}"
        echo "::set-output name=tags::${tags}"

    - name: Test Build
      uses: docker/build-push-action@v5
      with:
        load: true
        tags: ${{ steps.tags.outputs.tag }}
        context: ${{ matrix.image_dir }}
        file: ${{ matrix.image_dir }}/Dockerfile
        build-args: |
          python=${{ matrix.python }}
          release=${{ env.release }}

    - name: Test Conda environement
      env:
        tag: ${{ steps.tags.outputs.tag }}
      run: |
        docker run --rm ${tag} conda list --export

    - name: Make sure voms tools are working
      env:
        tag: ${{ steps.tags.outputs.tag }}
      run: |
        ERROR=$(docker run ${tag} voms-proxy-info 2>&1 > /dev/null; exit 0)
        TEST=$(echo -e "\nCouldn't find a valid proxy.\n")

        if [ "$ERROR" == "$TEST" ]; then
          exit 0
        else
          exit 1
        fi

    - name: Test Pytest environement
      env:
        tag: ${{ steps.tags.outputs.tag }}
      run: |
        docker run --rm -v ${{ github.workspace }}:/tmp/workspace ${tag} \
        sh -c "pip install -U pytest && cd tmp/workspace && pytest"

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.image_dir }}
        file: ${{ matrix.image_dir }}/Dockerfile
        platforms: linux/amd64
        push: ${{  github.event_name == 'push' }}
        tags: ${{ steps.tags.outputs.tags }}
        build-args: |
          python=${{ matrix.python }}
          release=${{ env.release }}


    - name: Send dispatch event downstream
      if: ${{  github.event_name == 'push' }}
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        repository: CoffeaTeam/docker-coffea-dask
        event-type: coffea-${{ matrix.image_dir }}
        client-payload: '{"ref": "${{ github.ref }}", "python": "py${{ matrix.python }}", "image": "${{ matrix.image_dir }}", "image_tag": "${{ steps.tags.outputs.tag }}"}'


    #- name: Make sure voms tools are working
    #  env:
    #    image: ${{ matrix.image_dir }}
    #    image_tag: ${DOCKER_ORG}/coffea-${image}:${{ steps.tags.outputs.tag }}
    #  run: |
    #    ERROR=$(docker run ${image_tag} voms-proxy-info 2>&1 > /dev/null; exit 0)
    #    TEST=$(echo -e "\nCouldn't find a valid proxy.\n")

    #    if [ "$ERROR" == "$TEST" ]; then
    #      exit 0
    #    else
    #      exit 1
    #    fi

    #- name: Export Full Conda Environment
    #  env:
    #    image: ${{ matrix.image_dir }}
    #    image_tag: ${DOCKER_ORG}/coffea-${image}:${{ steps.tags.outputs.tag }}
    #  run: |
    #    docker run ${image_tag} conda list --export
